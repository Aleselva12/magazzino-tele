"""
run_magazzino.py
Script di avvio per l'applicazione Magazzino Tele
Attiva automaticamente l'ambiente virtuale e avvia la GUI
Generated by Copilot
"""

import os
import sys
import subprocess

# Costante per il messaggio di chiusura
PRESS_ENTER_MSG = "Premi Invio per chiudere..."

def activate_virtual_environment():
    """
    Attiva l'ambiente virtuale se non è già attivo
    """
    # Controlla se siamo già nell'ambiente virtuale
    if hasattr(sys, 'real_prefix') or (hasattr(sys, 'base_prefix') and sys.base_prefix != sys.prefix):
        print("Ambiente virtuale già attivo!")
        return True
    
    # Path dell'ambiente virtuale
    venv_path = os.path.join(os.path.dirname(__file__), '.venv')
    python_exe = os.path.join(venv_path, 'Scripts', 'python.exe')
    
    if os.path.exists(python_exe):
        print("Attivazione ambiente virtuale e riavvio dell'applicazione...")
        # Riavvia lo script con l'interprete Python dell'ambiente virtuale
        subprocess.run([python_exe, __file__] + sys.argv[1:])
        sys.exit(0)
    else:
        print("Errore: Ambiente virtuale non trovato!")
        print(f"Percorso cercato: {python_exe}")
        return False

def main():
    """
    Funzione principale per avviare l'applicazione
    """
    # Verifica e attiva l'ambiente virtuale
    if not activate_virtual_environment():
        print("Impossibile attivare l'ambiente virtuale. Uscita.")
        input(PRESS_ENTER_MSG)
        return
    
    try:
        # Esegui il file main_modular.py (nuova architettura)
        print("Avvio Magazzino Tele - Architettura Modularizzata...")
        
        # Cambia nella directory del progetto
        os.chdir(os.path.dirname(os.path.abspath(__file__)))
        
        # Esegui il file main_modular.py
        result = subprocess.run([sys.executable, "interfaccia/main_modular.py"], 
                              capture_output=False, 
                              text=True)
        
        if result.returncode != 0:
            print(f"L'applicazione è terminata con codice: {result.returncode}")
        
    except Exception as e:
        print(f"Errore durante l'avvio: {e}")
        input(PRESS_ENTER_MSG)

if __name__ == "__main__":
    main()
