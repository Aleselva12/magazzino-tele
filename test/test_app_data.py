"""
Test finale per verificare che l'applicazione carichi correttamente l'ordine con prodotto
Generated by Copilot
"""

import sys
import os

# Aggiungi il percorso del backend
current_dir = os.path.dirname(os.path.abspath(__file__))
backend_path = os.path.join(current_dir, 'backend')
sys.path.insert(0, backend_path)

from crud import MagazzinoTeleCRUD

def test_application_data():
    """Test che simula il caricamento dati dell'applicazione"""
    crud = MagazzinoTeleCRUD()
    
    try:
        if crud.connect():
            print("‚úÖ Connessione database riuscita")
            
            # Test del metodo get_all_orders() utilizzato dall'applicazione
            orders = crud.get_all_orders()
            
            print(f"üìä Ordini caricati: {len(orders)}")
            
            if orders:
                for order in orders:
                    print(f"\nüìã Ordine #{order['id']}:")
                    print(f"  - Data: {order['data']}")
                    print(f"  - Cliente: {order['cliente']}")
                    print(f"  - Modello: {order['modello']}")
                    print(f"  - Colore: {order['colore']}")
                    print(f"  - Quantit√†: {order['quantita']}")
                    print(f"  - Evaso: {'S√¨' if order['evaso'] else 'No'}")
                    
                    # Verifica che non ci sia pi√π "Nessun Prodotto"
                    if order['modello'] and order['modello'] != 'Nessun Prodotto':
                        print("  ‚úÖ Prodotto correttamente collegato!")
                    else:
                        print("  ‚ùå Prodotto non collegato")
                
                print(f"\nüéâ SUCCESS!")
                print(f"‚úÖ Database correttamente strutturato con foreign key")
                print(f"‚úÖ Ordine #{orders[0]['id']} ha prodotto: {orders[0]['modello']} - {orders[0]['colore']}")
                print(f"‚úÖ L'applicazione pu√≤ ora gestire ordini con prodotti multipli")
                
            else:
                print("‚ùå Nessun ordine trovato")
            
            crud.disconnect()
            
        else:
            print("‚ùå Errore connessione database")
            
    except Exception as e:
        print(f"‚ùå Errore: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_application_data()
